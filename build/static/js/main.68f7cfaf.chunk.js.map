{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/phonebook_data.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","search","handleChange","value","onChange","PersonForm","newName","addNewPerson","handleNameChange","newNumber","handleNumberChange","onSubmit","type","baseUrl","exported","getAll","axios","get","then","response","data","create","personObject","post","update","id","newObject","put","deletePerson","delete","Person","person","setPersons","setMessage","name","number","onClick","window","confirm","PhonebookService","setTimeout","Persons","persons","map","p","length","Notification","message","error","className","App","useState","setNewName","setNewNumber","setSearch","successMessage","setSuccessMessage","errorMessage","setErrorMessage","timeLimit","useEffect","console","log","returnedData","event","target","preventDefault","filter","alert","find","changedPerson","returnedPerson","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAUeA,EATA,SAACC,GACd,IAAQC,EAAyBD,EAAzBC,OAAQC,EAAiBF,EAAjBE,aAChB,OACE,qDACoB,uBAAOC,MAAOF,EAAQG,SAAUF,QCazCG,EAjBI,SAACL,GAClB,IAAQM,EAA2EN,EAA3EM,QAASC,EAAkEP,EAAlEO,aAAcC,EAAoDR,EAApDQ,iBAAkBC,EAAkCT,EAAlCS,UAAWC,EAAuBV,EAAvBU,mBAC5D,OACE,uBAAMC,SAAUJ,EAAhB,UACE,yCACQ,uBAAOJ,MAAOG,EAASF,SAAUI,OAEzC,2CACU,uBAAOL,MAAOM,EAAWL,SAAUM,OAE7C,8BACE,wBAAQE,KAAK,SAAb,uB,gBCXFC,EAAU,cAwBDC,EAFE,CAAEC,OApBJ,WAEb,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkBhBC,OAfZ,SAACC,GAEd,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAaRI,OAVpB,SAACC,EAAIC,GAElB,OADgBV,IAAMW,IAAN,UAAad,EAAb,YAAwBY,GAAMC,GAC/BR,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQAQ,aALtB,SAACH,GAEpB,OADgBT,IAAMa,OAAN,UAAgBhB,EAAhB,YAA2BY,IAC5BP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCS5BU,EA3BA,SAAC9B,GAEd,IAAQ+B,EAAmC/B,EAAnC+B,OAAQC,EAA2BhC,EAA3BgC,WAAYC,EAAejC,EAAfiC,WAgB5B,OACE,+BACE,6BAAKF,EAAOG,OACZ,6BAAKH,EAAOI,SACZ,6BAAI,wBAAQC,QAhBK,WACfC,OAAOC,QAAP,iBAAyBP,EAAOG,KAAhC,QACFK,EAAiBX,aAAaG,EAAON,IAErCc,EAAiBxB,SAASG,MAAK,SAAAE,GAAI,OAAIY,EAAWZ,MAClDa,EAAW,WAAD,OAAYF,EAAOG,KAAnB,qBACVM,YAAW,WACTP,EAAW,QACV,OAQC,0BCGKQ,EAzBC,SAACzC,GAEf,IAAQ0C,EAA4C1C,EAA5C0C,QAASzC,EAAmCD,EAAnCC,OAAQ+B,EAA2BhC,EAA3BgC,WAAYC,EAAejC,EAAfiC,WAErC,OACE,8BACE,gCACE,gCACGS,EAAQC,KAAI,SAAAC,GAEX,OAAsB,IAAlB3C,EAAO4C,SAA2C,IAA3BD,EAAEV,KAAKjC,OAAOA,GAChC,cAAC,EAAD,CAAmB8B,OAAQa,EAAGZ,WAAYA,EAAYC,WAAYA,GAArDW,EAAEnB,IAGf,eCMNqB,EArBM,SAAC9C,GACpB,IAAQ+C,EAA2B/C,EAA3B+C,QAAR,EAAmC/C,EAAlBgD,MACjB,OAAID,OADJ,SAIM,qBAAKE,UAAU,QAAf,SACGF,IAMH,qBAAKE,UAAU,QAAf,SACGF,IAKF,MC4GMG,EAxHH,WACV,MAAgCC,mBAAS,IAAzC,mBAAQT,EAAR,KAAiBV,EAAjB,KAEA,EAAgCmB,mBAAS,IAAzC,mBAAQ7C,EAAR,KAAiB8C,EAAjB,KAEA,EAAoCD,mBAAS,IAA7C,mBAAQ1C,EAAR,KAAmB4C,EAAnB,KAEA,EAA4BF,mBAAS,IAArC,mBAAOlD,EAAP,KAAeqD,EAAf,KAEA,EAA4CH,mBAAS,MAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KAEA,EAAwCL,mBAAS,MAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KAEMC,EAAY,IAQlBC,qBANa,WACXC,QAAQC,IAAI,UACZvB,EAAiBxB,SACdG,MAAK,SAAA6C,GAAY,OAAI/B,EAAW+B,QAGrB,IAkFhB,OACE,gCACE,2CAECR,GAAkB,cAAC,EAAD,CAAcR,QAASQ,IAEzCE,GAAgB,cAAC,EAAD,CAAcV,QAASU,EAAcT,OAAO,IAE7D,cAAC,EAAD,CAAQ/C,OAAQA,EAAQC,aAdD,SAAC8D,GAC1BH,QAAQC,IAAIE,EAAMC,OAAO9D,OACzBmD,EAAUU,EAAMC,OAAO9D,UAarB,6CACA,cAAC,EAAD,CAAYG,QAASA,EAASC,aA1Fb,SAACyD,GAMpB,GALAH,QAAQC,IAAIpB,GAEZsB,EAAME,iBAG0F,IAA5FxB,EAAQyB,QAAO,SAAApC,GAAM,OAAIA,EAAOG,OAAS5B,GAAWyB,EAAOI,SAAW1B,KAAWoC,OACnFuB,MAAM,GAAD,OAAI9D,EAAJ,sEAAyEG,SAI3E,GAAiE,IAA7DiC,EAAQyB,QAAO,SAAApC,GAAM,OAAIA,EAAOG,OAAS5B,KAASuC,QACzD,GAAIR,OAAOC,QAAP,UAAkBhC,EAAlB,qFAA8G,CAChH,IAAMyB,EAASW,EAAQ2B,MAAK,SAAAzB,GAAC,OAAIA,EAAEV,OAAS5B,KACtCgE,EAAa,2BAAQvC,GAAR,IAAgBI,OAAQ1B,IAE3C8B,EACGf,OAAOO,EAAON,GAAI6C,GAClBpD,MAAK,SAAAqD,GACJhC,EAAiBxB,SAASG,MAAK,SAAAE,GAAI,OAAIY,EAAWZ,MAClDoC,EAAkB,WAAD,OAAYe,EAAerC,KAA3B,oBACjBM,YAAW,WACTgB,EAAkB,QACjBG,GACHP,EAAW,IACXC,EAAa,OAEdmB,OAAM,SAAAxB,GAELU,EAAgBV,EAAM7B,SAASC,KAAK4B,OACpCR,YAAW,WACTkB,EAAgB,QACfC,WAMJ,CACL,IAAMrC,EAAe,CAAEY,KAAM5B,EAAS6B,OAAQ1B,GAC9C8B,EAAiBlB,OAAOC,GACrBJ,MAAK,SAAAqD,GAEJhC,EAAiBxB,SAASG,MAAK,SAAAE,GAAI,OAAIY,EAAWZ,MAElDoC,EAAkB,SAAD,OAAUe,EAAerC,OAC1CM,YAAW,WACTgB,EAAkB,QACjBG,GAGHP,EAAW,IACXC,EAAa,OAEdmB,OAAM,SAAAxB,GAELU,EAAgBV,EAAM7B,SAASC,KAAK4B,OACpCR,YAAW,WACTkB,EAAgB,QACfC,QA+BmDnD,iBA1BrC,SAACwD,GACxBH,QAAQC,IAAIE,EAAMC,OAAO9D,OACzBiD,EAAWY,EAAMC,OAAO9D,QAwBwEM,UAAWA,EAAWC,mBArB7F,SAACsD,GAC1BH,QAAQC,IAAIE,EAAMC,OAAO9D,OACzBkD,EAAaW,EAAMC,OAAO9D,UAoBxB,yCACA,cAAC,EAAD,CAASuC,QAASA,EAASzC,OAAQA,EAAQ+B,WAAYA,EAAYC,WAAYuB,QCrHrFiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.68f7cfaf.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\r\nconst Filter = (props) => {\r\n  const { search, handleChange } = props\r\n  return (\r\n    <div>\r\n      filter shown with <input value={search} onChange={handleChange}/>\r\n    </div>\r\n  )\r\n}\r\n/* eslint-enable react/prop-types */\r\nexport default Filter","/* eslint-disable react/prop-types */\r\nconst PersonForm = (props) => {\r\n  const { newName, addNewPerson, handleNameChange, newNumber, handleNumberChange } = props\r\n  return (\r\n    <form onSubmit={addNewPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange}/>\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleNumberChange}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n/* eslint-enable react/prop-types */\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (personObject) => {\r\n  const request = axios.post(baseUrl, personObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst exported = { getAll, create, update, deletePerson }\r\n\r\nexport default exported","import PhonebookService from '../services/phonebook_data'\r\n/* eslint-disable react/prop-types */\r\nconst Person = (props) => {\r\n\r\n  const { person, setPersons, setMessage } = props\r\n\r\n  // Define delete handle code\r\n\r\n  const handleDelete = () => {\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      PhonebookService.deletePerson(person.id)\r\n      // We need to call getAll() to eventually update the persons array\r\n      PhonebookService.getAll().then(data => setPersons(data))\r\n      setMessage(`Deleted ${person.name} from the server`)\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>{person.name}</td>\r\n      <td>{person.number}</td>\r\n      <td><button onClick={handleDelete}>Delete</button></td>\r\n    </tr>\r\n  )\r\n}\r\n/* eslint-enable react/prop-types */\r\nexport default Person","import Person from './Person'\r\n/* eslint-disable react/prop-types */\r\nconst Persons = (props) => {\r\n\r\n  const { persons, search, setPersons, setMessage } = props\r\n  // Return the data in a table format for organization\r\n  return (\r\n    <div>\r\n      <table>\r\n        <tbody>\r\n          {persons.map(p => {\r\n          // This is for filtering out people by their names\r\n            if (search.length === 0 || p.name.search(search) !== -1) {\r\n              return <Person key={p.id} person={p} setPersons={setPersons} setMessage={setMessage}/>\r\n            }\r\n            else {\r\n              return null\r\n            }\r\n          }\r\n          )\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n/* eslint-enable react/prop-types */\r\nexport default Persons","/* eslint-disable react/prop-types */\r\nconst Notification = (props) => {\r\n  const { message, error = false } = props\r\n  if (message) {\r\n    if (error) {\r\n      return (\r\n        <div className=\"error\">\r\n          {message}\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"notif\">\r\n          {message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  return null\r\n}\r\n/* eslint-enable react/prop-types */\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport PhonebookService from './services/phonebook_data'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n\r\n  const [ newName, setNewName ] = useState('')\r\n\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n\r\n  const [search, setSearch] = useState('')\r\n\r\n  const [successMessage, setSuccessMessage] = useState(null)\r\n\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const timeLimit = 5000\r\n\r\n  const hook = () => {\r\n    console.log('effect')\r\n    PhonebookService.getAll()\r\n      .then(returnedData => setPersons(returnedData))\r\n  }\r\n\r\n  useEffect(hook, [])\r\n\r\n  const addNewPerson = (event) => {\r\n    console.log(persons)\r\n    // Prevent default behaviour of sending form\r\n    event.preventDefault()\r\n\r\n    // If you try to enter a person's name when they already exist with the exact number provided, alert message\r\n    if (persons.filter(person => person.name === newName && person.number === newNumber).length === 1) {\r\n      alert(`${newName} has already been added to the phonebook with phone number ${newNumber}`)\r\n    }\r\n\r\n    // Update the person's number\r\n    else if (persons.filter(person => person.name === newName).length === 1) {\r\n      if (window.confirm(`${newName} has already been added to the phonebook, replace the old number with a new one?`)) {\r\n        const person = persons.find(p => p.name === newName)\r\n        const changedPerson = { ...person, number: newNumber }\r\n\r\n        PhonebookService\r\n          .update(person.id, changedPerson)\r\n          .then(returnedPerson => {\r\n            PhonebookService.getAll().then(data => setPersons(data))\r\n            setSuccessMessage(`Updated ${returnedPerson.name}'s phone number`)\r\n            setTimeout(() => {\r\n              setSuccessMessage(null)\r\n            }, timeLimit)\r\n            setNewName('')\r\n            setNewNumber('')\r\n          })\r\n          .catch(error => {\r\n            // If we can't update the person's number, set error message and timeout\r\n            setErrorMessage(error.response.data.error)\r\n            setTimeout(() => {\r\n              setErrorMessage(null)\r\n            }, timeLimit)\r\n          }\r\n          )\r\n      }\r\n\r\n      // Create new person record and add it to persons array\r\n    } else {\r\n      const personObject = { name: newName, number: newNumber }\r\n      PhonebookService.create(personObject)\r\n        .then(returnedPerson => {\r\n          // Update the persons array\r\n          PhonebookService.getAll().then(data => setPersons(data))\r\n          // Set appropriate message and timeout\r\n          setSuccessMessage(`Added ${returnedPerson.name}`)\r\n          setTimeout(() => {\r\n            setSuccessMessage(null)\r\n          }, timeLimit)\r\n\r\n          // Reset name and number fields\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n        .catch(error => {\r\n          // This is the way to access the error message\r\n          setErrorMessage(error.response.data.error)\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, timeLimit)\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleSearchChange = (event) => {\r\n    console.log(event.target.value)\r\n    setSearch(event.target.value)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      {/*Displays either success message or error message based on which is non empty*/}\r\n      {successMessage && <Notification message={successMessage}/>}\r\n      {/*Updating persons array happens in Person component*/}\r\n      {errorMessage && <Notification message={errorMessage} error={true}/>}\r\n\r\n      <Filter search={search} handleChange={handleSearchChange}/>\r\n      <h3> Add a new </h3>\r\n      <PersonForm newName={newName} addNewPerson={addNewPerson} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange}/>\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} search={search} setPersons={setPersons} setMessage={setSuccessMessage}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}